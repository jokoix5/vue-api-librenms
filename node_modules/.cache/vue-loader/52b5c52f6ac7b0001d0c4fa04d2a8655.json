{"remainingRequest":"/home/media/Documents/seminar tugas akhir/vue-api-librenms-master/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/media/Documents/seminar tugas akhir/vue-api-librenms-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/media/Documents/seminar tugas akhir/vue-api-librenms-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/media/Documents/seminar tugas akhir/vue-api-librenms-master/src/views/Detail.vue?vue&type=template&id=40f4caea&scoped=true&","dependencies":[{"path":"/home/media/Documents/seminar tugas akhir/vue-api-librenms-master/src/views/Detail.vue","mtime":1604645969404},{"path":"/home/media/Documents/seminar tugas akhir/vue-api-librenms-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/media/Documents/seminar tugas akhir/vue-api-librenms-master/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/media/Documents/seminar tugas akhir/vue-api-librenms-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/media/Documents/seminar tugas akhir/vue-api-librenms-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}