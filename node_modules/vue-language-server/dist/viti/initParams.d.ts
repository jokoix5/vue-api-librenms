export declare const params: {
    /**
     * Doesn't matter as long as its positive
     */
    processId: number;
    capabilities: {};
    initializationOptions: {
        config: {
            vetur: {
                useWorkspaceDependencies: boolean;
                completion: {
                    autoImport: boolean;
                    useScaffoldSnippets: boolean;
                    tagCasing: string;
                };
                grammar: {
                    customBlocks: {
                        docs: string;
                        i18n: string;
                    };
                };
                validation: {
                    template: boolean;
                    style: boolean;
                    script: boolean;
                };
                format: {
                    enable: boolean;
                    options: {
                        tabSize: number;
                        useTabs: boolean;
                    };
                    defaultFormatter: {
                        html: string;
                        css: string;
                        postcss: string;
                        scss: string;
                        less: string;
                        stylus: string;
                        js: string;
                        ts: string;
                    };
                    defaultFormatterOptions: {
                        'js-beautify-html': {
                            wrap_attributes: string;
                        };
                        prettyhtml: {
                            printWidth: number;
                            singleQuote: boolean;
                            wrapAttributes: boolean;
                            sortAttributes: boolean;
                        };
                    };
                    styleInitialIndent: boolean;
                    scriptInitialIndent: boolean;
                };
                trace: {
                    server: string;
                };
                dev: {
                    vlsPath: string;
                    vlsPort: number;
                    logLevel: string;
                };
                experimental: {
                    templateInterpolationService: boolean;
                };
            };
        };
    };
};
